apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ../reporting/docker-compose.yml convert
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: logstash
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: logstash
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file ../reporting/docker-compose.yml convert
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/infra: "true"
        io.kompose.service: logstash
    spec:
      containers:
        - env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
          image: 'logstash:'
          name: logstash
          resources: {}
          volumeMounts:
            - mountPath: /usr/share/logstash/pipeline/logstash.conf
              name: logstash-claim0
              readOnly: true
            - mountPath: /mapping.json
              name: logstash-claim1
              readOnly: true
            - mountPath: /test-run-data-template.json
              name: logstash-claim2
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: logstash-claim0
          persistentVolumeClaim:
            claimName: logstash-claim0
            readOnly: true
        - name: logstash-claim1
          persistentVolumeClaim:
            claimName: logstash-claim1
            readOnly: true
        - name: logstash-claim2
          persistentVolumeClaim:
            claimName: logstash-claim2
            readOnly: true
status: {}
