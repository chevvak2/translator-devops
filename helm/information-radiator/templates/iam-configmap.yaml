apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "information-radiator.fullname" . }}-iam-configmap
data:
  iam-db-init.sh: |-
    #!/bin/bash
    if [[ $(psql -v ON_ERROR_STOP=1 --username $POSTGRES_USER -tAc "SELECT 1 FROM pg_namespace WHERE nspname = 'zafira'") == '1' ]]; then
      echo "Schema already exists"
      exit 1
    fi
    echo "Running db-iam-database.sql"
    psql -v ON_ERROR_STOP=1 --username $POSTGRES_USER -f /docker-entrypoint-initdb.d/sql/db-iam-database.sql

  db-iam-database.sql: |-
    CREATE SCHEMA IF NOT EXISTS zafira;
  
  POSTGRES_USER: {{ .Values.postgres.user }}
  POSTGRES_PASSWORD: {{ .Values.postgres.password }}

  DATABASE_URL: jdbc:postgresql://{{ include "information-radiator.fullname" . }}-iam-db:{{ .Values.iam_db_service.service.port }}/postgres
  DATABASE_USERNAME: {{ .Values.postgres.user }}
  DATABASE_PASSWORD: {{ .Values.postgres.password }}

  ADMINISTRATOR_USERNAME: admin
  ADMINISTRATOR_PASSWORD: changeit
  ADMINISTRATOR_GROUP: Super admins
  OWNER_GROUP: Admins

  RABBITMQ_HOST: {{ include "information-radiator.fullname" . }}-rabbitmq
  RABBITMQ_PORT: "{{ .Values.rabbitmq.service.amqp_port }}"
  RABBITMQ_USERNAME: {{ .Values.rabbitmq.user }}
  RABBITMQ_PASSWORD: {{ .Values.rabbitmq.password }}

  ZEBRUNNER_HOST: http://{{ include "information-radiator.fullname" . }}-proxy:80

  TOKEN_SIGNING_SECRET: {{ .Values.secrets.token_signing_secret }}
  CRYPTO_SALT: {{ .Values.secrets.crypto_salt }}
