# Default values for aragorn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ranking-agent/aragorn
  tag: latest

web:
  serverHostName: "serverHostName"

deploymentStrategy: Recreate

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  host: ingress_HOST
  class: ""
  enabled: true
  pathType: "ImplementationSpecific"
  path: "/1.4"
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 86400;
    nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    nginx.ingress.kubernetes.io/send-timeout: "86400"
    nginx.ingress.kubernetes.io/service-upstream: 'true'
    nginx.ingress.kubernetes.io/upstream-keepalive-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
  tls:
    enabled: false

app:
  port: 4321
  debugTiming: "True"
  multistrider_batch_size: 75
  maximum_multistrider_rules: 75
  workerTimeout: 600
  resources:
    requests:
      memory: 2Gi
      cpu: 1000m
    limits:
      memory: 15Gi
      cpu: 1000m
  logLevel: "trace"
  logStorageSize: 5Gi
  queueStorageSize: 10Gi
  sqliteStoragePath: "/repo/aragorn/data"
  sqliteStorageSize: 100Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

x_trapi:
  maturity:
    value: "maturity"
  location:
    value: "location"

sub_processes:
  strider_url: "strider"
  answer_coalesce_url: "ac"
  ranker_url: "ranker"
  node_norm_url: "nn"
  robokop_kg_url: "robokopkg"

otel:
  # disable otel by default
  enabled: false
  jaeger_host: "jaeger-otel-agent"
  jaeger_port: "6831"
  service_name: "ARAGORN"

rbtmq:
  resources:
    limits:
      memory: 1Gi
    requests:
      memory: 300M
  image:
    repository: renciorg/aragorn-rbtmq
    tag: 0.0.1
  storage:
    createPV: false
    createPVC: false
    pvName: "pv-rbtmq"
    size: 1Gi
  secrets:
    amqpPort: 5672
    webPort: 15672
    queueUser: "fakeuser"
    queuePassword: "fakepw"
    queueAdminPassword: "fakeadminpw"
    queueHost: "fakehost"

### REDIS config

redis:
  # full option here (https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml)
  architecture: standalone
  db: 0
  port: 6379
  host: aragorn-redis-master
  auth:
    password: password
  image:
    repository: redis
    tag: "7.0.12"
  master:
    readinessProbe:
      enabled: true
      # to make it available ASAP
      periodSeconds: 1
      # spans 25 mins (150 * 10 secs)
      failureThreshold: 1
    livenessProbe:
      # Liveliness probes can be off, since
      # With big cache data to load or sync , redis is alive but
      # responds with LOADING message. to avoid cyclic restarts
      # keeping this off
      enabled: false
    initContainers:
    - name: download-db
      image: "busybox:1.35"
      command:
        - 'wget'
      args:
        - '-O'
        - '/data/dump.rdb'
        - 'https://stars.renci.org/var/aragorn/cache.rdb'
      volumeMounts:
      - name: redis-data
        mountPath: '/data/'
    persistence:
      size: 60Gi
    nodeSelector: {}
    tolerations: []
    affinity: {}
  replica:
    replicaCount: 0
  # anything that goes into redis.conf file
  commonConfiguration: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly no
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    maxmemory 60gb
    maxmemory-policy allkeys-lfu
    loglevel notice
    logfile /data/aragorn_cache.log
